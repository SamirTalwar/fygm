#!/usr/bin/env ruby

require 'open-uri'
require 'open3'
require 'pathname'
require 'shellwords'
require 'stringio'

@dir = Pathname.new(File.dirname(__FILE__)).realpath
@dotfiles = @dir + 'dotfiles'
@home = Pathname.new(ENV['HOME']).realpath

@links = {
  @home + 'bin' => @dir + 'bin',
  @home + '.emacs.d' => @dotfiles + 'emacs.d',
  @home + '.ghc/ghci.conf' => @dotfiles + 'ghc/ghci.conf',
  @home + '.gitconfig' => @dotfiles + 'gitconfig',
  @home + '.gitignore' => @dotfiles + 'gitignore',
  @home + '.gnupg/gpg.conf' => @dotfiles + 'gnupg/gpg.conf',
  @home + '.gnupg/gpg-agent.conf' => @dotfiles + 'gnupg/gpg-agent.conf',
  @home + '.i3' => @dotfiles + 'i3',
  @home + '.ideavimrc' => @dotfiles + 'ideavimrc',
  @home + '.config/nvim/init.vim' => @dotfiles + 'vimrc',
  @home + '.racketrc' => @dotfiles + 'racketrc',
  @home + '.stack/config.yaml' => @dotfiles + 'stack/config.yaml',
  @home + '.spacemacs' => @dotfiles + 'spacemacs',
  @home + '.swiplrc' => @dotfiles + 'swiplrc',
  @home + '.tmux.conf' => @dotfiles + 'tmux.conf',
  @home + '.vimrc' => @dotfiles + 'vimrc',
  @home + '.zlogin' => @dotfiles + 'zlogin',
  @home + '.zlogout' => @dotfiles + 'zlogout',
  @home + '.zplug' => @dotfiles + 'zplug',
  @home + '.zprofile' => @dotfiles + 'zprofile',
  @home + '.zshenv' => @dotfiles + 'zshenv',
  @home + '.zshrc' => @dotfiles + 'zshrc',
}

def run *command
  puts "$ #{Shellwords.join(command)}"
  output, process = Open3.capture2e(*command, chdir: @dir)
  puts output
  unless process.success?
    $stderr.puts "FAIL: #{command}"
    exit 1
  end
  return output
end

def self_update
  output = run 'git', 'pull', '--ff-only'
  run 'git', 'submodule', 'update', '--init', '--recursive'
  return !(output =~ /^Already up[ -]to[ -]date\.$/)
end

def link source, destination
  destination.dirname.mkpath()
  destination.unlink() if destination.symlink?
  destination.make_symlink(source)
end

if self_update
  puts "Updated #{@dir}. Restarting..."
  exec __FILE__, *ARGV
end

puts 'Symlinking files...'
@links.each do |destination, source|
  link source, destination
end

if RbConfig::CONFIG['host_os'] =~ /^darwin/
  puts 'Installing useful software...'
  run './install-apps.mac.sh'
end

puts 'Installing vim plugins...'
autoload = @home + '.config/nvim/autoload'
autoload.mkpath()
open('https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim') do |plug|
  (autoload + 'plug.vim').open 'w' do |f|
    f.write plug.read
  end
end

run 'nvim', '+PlugInstall', '+PlugClean!', '+qall'

puts 'Done!'
