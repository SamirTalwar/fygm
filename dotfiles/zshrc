setopt clobber
unsetopt correct

KEYTIMEOUT=1

HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000
setopt histignorealldups share_history

alias ls='\ls --color=auto'
alias ll='ls -lh'
alias la='ls -alh'

if [[ -d ~/.nix-profile/share/zsh/site-functions ]]; then
  fpath=(
    ~/.nix-profile/share/zsh/site-functions
    $fpath
  )
  autoload -U compinit && compinit
fi

# On macOS, we use the built-in `pbcopy` and `pbpaste`.
case ${XDG_SESSION_TYPE:-} in
  wayland)
    alias pbcopy=wl-copy
    alias pbpaste=wl-paste
    ;;
  x11)
    alias pbcopy='xclip -selection clipboard -i'
    alias pbpaste='xclip -selection clipboard -o'
    ;;
esac

# Disable `git checkout` so I can get used to the new commands.
# Always pass `--ext-diff` to the commands that accept it.
ZSHRC_GIT=$(command -v git)
function git {
  local git_subcommand git_args
  if [[ $# -eq 0 ]]; then
    $ZSHRC_GIT
    return $?
  fi
  git_subcommand=$1
  shift
  git_args=($@)
  case $git_subcommand in
    checkout)
      echo >&2 'Do not use `git checkout`. Use `git restore` or `git switch` instead.'
      return 2
      ;;
    log|show)
      git_args=(--ext-diff ${git_args[@]})
      ;;
  esac
  $ZSHRC_GIT $git_subcommand ${git_args[@]}
}

# Make zsh-autosuggestions show up in a color that's actually visible.
# (Useful for the Solarized theme.)
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=10

# Call `title` after autojumping.
functions[original_j]=$functions[j]
function j {
  original_j $@
  title
}

# Fuzzy completion.
zstyle ':completion:*' matcher-list \
  '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:|?=** m:{a-z\-}={A-Z\_}'

# Switch to vi mode.
bindkey -v

# Use a beam cursor when in insert mode, and a block in normal mode.
function zle-keymap-select {
  if [[ $KEYMAP == 'vicmd' ]]; then
    printf '\e[2 q'
  else
    printf '\e[6 q'
  fi
}
function zle-line-init {
  zle-keymap-select
}
function zle-line-deinit {
  zle accept-line
  zle-keymap-select
}
zle -N zle-keymap-select
zle -N zle-line-init
zle -N zle-line-deinit
for key in $(bindkey | fgrep accept-line | sed 's/^"\([^"]*\)".*/\1/'); do bindkey $key zle-line-deinit; done

if [[ -e ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi
