export ZPLUG_HOME=/usr/local/opt/zplug
source ~/.zplug

setopt clobber
unsetopt correct
setopt interactivecomments
setopt prompt_subst

KEYTIMEOUT=1

HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000
setopt append_history inc_append_history share_history
bindkey '^R' history-incremental-search-backward

alias ll='ls -l'
alias la='ls -al'
if [[ "$OSTYPE" == darwin* ]]; then
  alias ls='ls -G'
else
  alias ls='ls --color'
fi

# Fuzzy completion.
zstyle ':completion:*' matcher-list \
  '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:|?=** m:{a-z\-}={A-Z\_}'

# Switch to vi mode and show it with the cursor style.
bindkey -v

function zle-keymap-select {
  if [[ $KEYMAP == 'vicmd' ]]; then
    printf '\e[2 q'
  else
    printf '\e[6 q'
  fi
}
function zle-line-init {
  zle -K viins
  printf '\e[6 q'
}
function zle-line-deinit {
  PROMPT="${PROMPT_DIR} %{$fg[green]%}[%D{%H:%M}]%{$reset_color%} ${PROMPT_ARROW} "
  zle reset-prompt
  PROMPT="${PROMPT_DIR} ${PROMPT_ARROW} "
  zle accept-line
  printf '\e[2 q'
}
zle -N zle-keymap-select
zle -N zle-line-init
zle -N zle-line-deinit
for key in $(bindkey | fgrep accept-line | sed 's/^"\([^"]*\)".*/\1/'); do bindkey $key zle-line-deinit; done

# Show the directory path on the left-hand side.
PROMPT_DIR="%{$fg[blue]%}%(4~|…/%3~|%~)%{$reset_color%}"
PROMPT_ARROW="%B\$([[ \$? -eq 0 ]] && echo '❯' || echo '%{$fg[red]%}❯%{$reset_color%}')%b"
PROMPT="${PROMPT_DIR} ${PROMPT_ARROW} "

# Show Git information on the right-hand side.
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr ' ★'
zstyle ':vcs_info:*' unstagedstr ' ☆'
zstyle ':vcs_info:*' formats "%{$fg[yellow]%}%b%{$reset_color%}%{$fg[gray]%}%m%c%u%{$reset_color%}"
zstyle ':vcs_info:git*+set-message:*' hooks git-extras
function +vi-git-extras {
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]]; then
    if [[ $(git rev-list --count @{u}.. 2> /dev/null) -ne 0 ]]; then
      hook_com[misc]+=' ↑'
    fi
    if [[ $(git rev-list --count ..@{u} 2> /dev/null) -ne 0 ]]; then
      hook_com[misc]+=' ↓'
    fi
    if [[ $(git stash list | wc -l) -gt 0 ]]; then
      hook_com[misc]+=' ※'
    fi
    if git status --porcelain | grep -E '^(\?\?| D) ' &> /dev/null && [[ -z ${hook_com[unstaged]} ]]; then
      hook_com[unstaged]+=' ☆'
    fi
  fi
}
function precmd {
  vcs_info
}
RPROMPT='${vcs_info_msg_0_}'

if (( $+commands[brew] )); then
  if [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]]; then
    source $(brew --prefix)/etc/profile.d/autojump.sh
  fi

  if [[ -s $(brew --prefix direnv) ]]; then
    eval "$(direnv hook zsh)"
  fi
fi

if [[ -e ~/.opam/opam-init/init.zsh ]]; then
  source ~/.opam/opam-init/init.zsh >& /dev/null || :
fi

# The next line enables shell command completion for gcloud.
if [ -f /usr/local/opt/google-cloud-sdk/completion.zsh.inc ]; then
  source '/usr/local/opt/google-cloud-sdk/completion.zsh.inc'
fi

if [[ -e ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi

zplug load

# Use a faint grey for autosuggestions.
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=236'
