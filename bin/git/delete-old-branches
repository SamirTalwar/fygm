#!/bin/bash

set -e
set -u
set -o pipefail

main_branch="$(git main-branch)"

function remove-branches-in-use {
  ( grep -E -v "^\*| ${main_branch}$| master$" || : ) | sed 's/^ *//'
}

# Remove merged branches.
git branch --merged "$main_branch" \
  | remove-branches-in-use \
  | xargs --no-run-if-empty git branch -d

# Remove branches that have been squashed and merged.
git for-each-ref --format='%(refname:short)' refs/heads/ | while read -r branch; do
  if merge_base="$(git merge-base "$main_branch" "$branch")"; then
    if [[ "$(git cherry "$main_branch" "$(git commit-tree -p "$merge_base" -m _ "$(git rev-parse "$branch^{tree}")")")" == "-"* ]]; then
      git branch -D "$branch"
    fi
  fi
done
