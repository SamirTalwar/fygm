#!/usr/bin/env ruby

Host = Struct.new(:name, :extraction, :pull_request_url) do
  def matches url
    url =~ extraction
  end

  def extract_repo url
    url.match(extraction)[1]
  end
end

hosts = [
  Host.new(
    'GitHub',
    %r{^(?:git@github.com:|https://github.com/)(.*)\.git$},
    lambda { |upstream_repo, repo, main_branch, branch|
      if upstream_repo
        owner = repo.split('/')[0]
        "https://github.com/#{upstream_repo}/compare/#{main_branch}...#{owner}:#{branch}?expand=1"
      else
        "https://github.com/#{repo}/compare/#{branch}?expand=1"
      end
    }),
  Host.new(
    'BitBucket',
    %r{^git@bitbucket.org(.*)\.git$},
    lambda { |upstream_repo, repo, main_branch, branch|
      "https://bitbucket.org/#{upstream_repo || repo}/pull-request/new?source=#{repo}%3A%3A#{branch}%3A%3A#{main_branch}"
    })
]

url = `git config --get remote.origin.url`.strip
if url.empty?
  $stderr.puts "There's nowhere to raise the pull request. Consider hosting this somewhere."
  exit 1
end

host = hosts.find { |h| h.matches url }
unless host
  $stderr.puts "I don't know how to push #{url}."
  exit 1
end

upstream_url = `git config --get remote.upstream.url`.strip
upstream_repo = upstream_url.empty? ? nil : host.extract_repo(upstream_url)

branch = `git name`.strip
main_branch = `git main-branch`.strip
if branch == main_branch and upstream_repo.nil?
  $stderr.puts "Do not work on the \"#{main_branch}\" branch."
  exit 1
end

unless system 'git', 'first-push', *ARGV
  exit $?.exitstatus
end

repo = host.extract_repo url
unless system 'open', host.pull_request_url.call(upstream_repo, repo, main_branch, branch)
  exit $?.exitstatus
end
