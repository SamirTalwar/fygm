[user]
	name = Samir Talwar
	email = samir@noodlesandwich.com
[core]
	editor = vim
	excludesfile = ~/.gitignore
	autocrlf = input
	ignorecase = false
[color]
	ui = true
[push]
	default = simple
[alias]
	git = ! git
	name = symbolic-ref --short HEAD
	s = status
	a = add -A
	p = pull --ff-only --recurse-submodules --prune
	amend = commit --amend --no-edit
	praise = blame
	delete-old-branches = !"\
		set -e; \
		branches=$((git branch --merged | egrep -v '^\\*' | egrep -v '^\\* master$') || :); \
		[[ -z \"$branches\" ]] || git branch -d $branches"
	first-push = ! git push -u origin $(git name)
	delete-remote = ! git push origin :$(git name) && git branch --unset-upstream
	switch-to = !"\
		set -e; \
		git branch $1; \
		git reset --hard origin/$(git name); \
		git checkout"
	m = !"\
		set -e; \
		([[ $(git name) == 'master' ]] || git checkout master); \
		git p; \
		git delete-old-branches"
	up = !"\
		set -e; \
		if [[ $(git name) == 'master' ]]; then \
			git m; \
		else \
			echo $(git name) > .branch; \
			git m; \
			(! git show-ref --quiet refs/heads/$(cat .branch) || git checkout $(cat .branch)); \
			rm .branch; \
		fi"
	upm = ! git up && git merge master
	upr = ! git up && git rebase master
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	dirs = !"\
		set -e; \
		find . -maxdepth 1 -type d | while read dir; do \
			if [[ -e $dir/.git ]]; then \
				echo \"In $(basename $dir): git $@\"; \
				(cd $dir && git $@); \
				echo; \
			fi; \
		done; \
		true"
